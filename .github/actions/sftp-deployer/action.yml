# A custom, simplified GitHub Action for SFTP file deployment.
# This action is designed to be used by other workflows.
# It installs lftp, authenticates with SFTP credentials, and mirrors the local directory to the remote.

name: "Simplified SFTP Deployer"
description: "A stripped-down SFTP deployment action that mirrors a local directory to a remote host."
branding:
  icon: "upload"
  color: "blue"

inputs:
  remote-protocol:
    description: "Remote file transfer protocol (sftp)"
    required: true
    default: "sftp"
  remote-host:
    description: "Remote host"
    required: true
  remote-port:
    description: "Remote port"
    required: true
    default: 22
  remote-user:
    description: "SFTP username"
    required: true
  remote-password:
    description: "SFTP password"
    required: true
  local-path:
    description: "Local path to deploy from"
    required: true
  remote-path:
    description: "Remote path on host"
    required: true

runs:
  using: "composite"
  steps:
    - name: "Install dependencies"
      shell: bash
      run: |
        echo "::group::Install packages"
        # We need lftp to handle the SFTP mirroring.
        # The command is optimized for a non-interactive CI/CD environment
        # by combining update and install, and using flags to prevent prompts.
        DEBIAN_FRONTEND=noninteractive sudo apt-get update && sudo apt-get install --no-install-recommends -y lftp
        echo "::endgroup::"

    - name: "Put site in maintenance mode"
      shell: bash
      run: |
        echo "::group::Creating app_offline.htm to take site offline"
        # Create a simple app_offline.htm file to release file locks on the remote server.
        # This is a standard practice for deploying to IIS.
        # The 'put -e' command is used to put the inline content directly into the remote file.
        lftp -c "set sftp:auto-confirm yes; open ${{inputs.remote-protocol}}://${{inputs.remote-user}}:${{inputs.remote-password}}@${{inputs.remote-host}}:${{inputs.remote-port}}; \
                  put -e \"<!DOCTYPE html><html><body><h1>Site Under Maintenance</h1><p>We'll be back shortly!</p></body></html>\" \"${{inputs.remote-path}}/app_offline.htm\""
        echo "::endgroup::"
    
    - name: "Transfer files"
      shell: bash
      run: |
        echo "::group::Transfer files to remote host"
        # Use lftp to mirror the local path to the remote path.
        # The 'mirror' command ensures all local files are copied to the remote.
        lftp -c "set sftp:auto-confirm yes; open ${{inputs.remote-protocol}}://${{inputs.remote-user}}:${{inputs.remote-password}}@${{inputs.remote-host}}:${{inputs.remote-port}}; 
                  mirror --reverse --delete --verbose \"${{inputs.local-path}}\" \"${{inputs.remote-path}}\""

        echo "::endgroup::"

    - name: "Take site out of maintenance mode"
      shell: bash
      run: |
        echo "::group::Removing app_offline.htm to bring site online"
        # Remove the temporary app_offline.htm file to bring the site back online.
        lftp -c "set sftp:auto-confirm yes; open ${{inputs.remote-protocol}}://${{inputs.remote-user}}:${{inputs.remote-password}}@${{inputs.remote-host}}:${{inputs.remote-port}}; \
                  rm \"${{inputs.remote-path}}/app_offline.htm\""
        echo "::endgroup::"
