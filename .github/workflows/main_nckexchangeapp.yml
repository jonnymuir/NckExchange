# Docs for the GitHub Actions SFTP Deploy action: https://github.com/marketplace/actions/ftp-sftp-file-deployer

name: Build and Deploy Umbraco App to Fasthosts

on:
  push:
    branches:
      - main
    # The 'paths' keyword now ensures this workflow only runs when files
    # under the 'src' folder are modified.
    paths:
      - 'src/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o "publish" --no-self-contained

      - name: Create appsettings.json for Production
        run: |
          # The Windows runner uses PowerShell.
          # We read the JSON file into a mutable hashtable to safely add or replace the section.
          # This avoids the error where the 'ConnectionStrings' property is not found initially.
          $json = Get-Content 'publish/appsettings.json' | Out-String | ConvertFrom-Json -AsHashtable
          $json.ConnectionStrings = @{
              umbracoDbDSN = "${{ secrets.UMBRACO_DB_DSN }}"
              umbracoDbDSN_ProviderName = "Microsoft.Data.SqlClient"
          }
          # To fix the 'serialization has exceeded the set depth' warning, we increase the depth.
          $json | ConvertTo-Json -Depth 4 | Set-Content 'publish/appsettings.json'

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: publish

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: ./app_publish
      
      # Use the new custom SFTP deployer action
      - name: SFTP Upload to Fasthosts using custom action
        # This assumes your new custom action is located at '.github/actions/sftp-deployer'
        uses: ./.github/actions/sftp-deployer
        with:
          remote-protocol: sftp
          remote-host: ${{ secrets.SFTP_HOST }}
          remote-user: ${{ secrets.SFTP_USERNAME }}
          remote-password: ${{ secrets.SFTP_PASSWORD }}
          local-path: './app_publish/'
          remote-path: '/htdocs/'
          maintenance-page-path: './app_offline.htm'
