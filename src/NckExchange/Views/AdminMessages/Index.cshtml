@model List<NckExchange.Core.Models.ContactMessage>
@{
    // Set the page title and ensure it uses your main website layout
    ViewData["Title"] = "Contact Messages Admin";
    Layout = "_Layout"; 

    // Get current filter values from ViewData for form persistence
    var currentLimit = (int?)ViewData["CurrentLimit"] ?? 100;
    var currentIsAnswered = (bool?)ViewData["CurrentIsAnswered"];

    // NEW: Boolean variables for 'selected' attribute - This explicitly tells Razor when to render the 'selected' attribute
    bool selectLimit50 = (currentLimit == 50);
    bool selectLimit100 = (currentLimit == 100);
    bool selectLimit500 = (currentLimit == 500);
    bool selectLimit0 = (currentLimit == 0); // For "All Messages"

    bool selectAllStatuses = (!currentIsAnswered.HasValue);
    bool selectPending = (currentIsAnswered.HasValue && !currentIsAnswered.Value);
    bool selectAnswered = (currentIsAnswered.HasValue && currentIsAnswered.Value);
}

<style>
    :root {
          --bs-body-font-size: 1rem;
          --bs-body-line-height: 1;
    }
</style>

<div class="container my-5">
    <h1 class="mb-4 text-center">Contact Messages</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Filtering and Limiting Form -->
    <div class="mb-4 p-4 bg-white rounded-3 shadow-sm">
        <form id="filterForm" asp-controller="AdminMessages" asp-action="Index" method="get" class="row g-3 align-items-end">
            <div class="col-md-4">
                <label for="limit" class="form-label">Show:</label>
                <select id="limit" name="limit" class="form-select">
                    <option value="50" selected="@selectLimit50">Last 50 Messages</option>
                    <option value="100" selected="@selectLimit100">Last 100 Messages</option>
                    <option value="500" selected="@selectLimit500">Last 500 Messages</option>
                    <option value="0" selected="@selectLimit0">All Messages</option> @* Use 0 for "no limit" *@
                </select>
            </div>
            <div class="col-md-4">
                <label for="isAnswered" class="form-label">Status:</label>
                <select id="isAnswered" name="isAnswered" class="form-select">
                    <option value="" selected="@selectAllStatuses">All Statuses</option>
                    <option value="false" selected="@selectPending">Pending</option>
                    <option value="true" selected="@selectAnswered">Answered</option>
                </select>
            </div>
            @* The "Apply Filters" button is removed *
            @* <div class="col-md-auto">
                <button type="submit" class="btn btn-primary">Apply Filters</button>
            </div> *@
        </form>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center" role="alert">
            No contact messages found with the current filters.
        </div>
    }
    else
    {
        <div class="table-responsive p-3 bg-white rounded-3 shadow">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">ID</th>
                        <th scope="col">Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Message Preview</th>
                        <th scope="col">Submitted</th>
                        <th scope="col">Status</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var message in Model)
                    {
                        <tr class="@(message.IsAnswered ? "table-light" : "table-warning")">
                            <td>@message.Id</td>
                            <td>@message.Name</td>
                            <td>@message.Email</td>
                            <td>@(message.Message.Length > 70 ? message.Message.Substring(0, 70) + "..." : message.Message)</td>
                            <td>@message.DateSubmitted.ToShortDateString() @message.DateSubmitted.ToShortTimeString()</td>
                            <td>
                                @if (message.IsAnswered)
                                {
                                    <span class="badge bg-success"><i class="bi bi-check-circle-fill"></i> Answered</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger"><i class="bi bi-exclamation-triangle-fill"></i> Pending</span>
                                }
                            </td>
                            <td>
                                <a asp-controller="AdminMessages" asp-action="Reply" asp-route-id="@message.Id" class="btn btn-sm btn-primary">
                                    @if (message.IsAnswered) {<i class="bi bi-pencil-fill"></i> <span>Edit Answer</span>} else {<i class="bi bi-reply-fill"></i> <span>Reply</span>}
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <!-- Include Bootstrap Icons for visual flair -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const filterForm = document.getElementById('filterForm');
            const limitSelect = document.getElementById('limit');
            const isAnsweredSelect = document.getElementById('isAnswered');

            if (filterForm && limitSelect && isAnsweredSelect) {
                // Function to submit the form
                const submitFilterForm = () => {
                    filterForm.submit();
                };

                // Add change event listeners to both select elements
                limitSelect.addEventListener('change', submitFilterForm);
                isAnsweredSelect.addEventListener('change', submitFilterForm);
            }
        });
    </script>
}
