@using Umbraco.Extensions
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Web.Common.Views
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Models.PublishedContent
@using Microsoft.AspNetCore.Html
@using NckExchange.Extensions
@using Slimsy.Enums
@using Slimsy.Extensions
@inherits UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem<ContentModels.ImageLink>>


@if (Model?.Content?.Image == null || Model?.Content?.Link == null)
{
	return;
}

@{
	// Define the target crop dimensions
	var targetWidth = 400;
	var targetHeight = 290;

	// Default to center
	var rxy = "0.5,0.5";

	// You would get this value from your content model, for example:
	var cropFocus = Model.Content?.CropFocus?.ToString().ToLower();
	if(cropFocus != "right")
	{
		cropFocus = "left";
	}

	if (cropFocus == "left")
	{
		rxy = "0.0,0.5"; // Left side
	}
	else if (cropFocus == "right")
	{
		rxy = "1.0,0.5"; // Right side
	}

	// Construct the options string
	var options = $"format=webp&rxy={rxy}";
}


<div class="col-md-6 col-lg-4 mb-5">
	<div class="portfolio-item mx-auto">
		<a href="@Model.Content.Link.Url" target="@Model.Content.Link.Target" title="@Model.Content.Link.Name">
			<div class="portfolio-item-caption d-flex align-items-center justify-content-center h-100 w-100">
				<div class="portfolio-item-caption-content text-center text-white"><svg style="display: inline-block;
				height: 1em;
				overflow: visible;
				vertical-align: -.125em;
				font-size: 3em;
				box-sizing: content-box;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 488 512" fill="currentColor">
						<path fill="currentColor"
							d="M240 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H32c-17.7 0-32 14.3-32 32s14.3 32 32 32H176V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H384c17.7 0 32-14.3 32-32s-14.3-32-32-32H240V80z">
						</path>
					</svg></div>
			</div>
			<img class="img-fluid lazyload"
				data-srcset="@Url.GetSrcSetUrls(Model.Content.Image, targetWidth, targetHeight, furtherOptions: options)"
				src="@Model.Content.Image.GetCropUrl(width: targetWidth, height: targetHeight, quality: 40, furtherOptions: options)"
				alt="@Model.Content.Image.GetAltText()" sizes="auto" width="@targetWidth" height="@targetHeight" />
		</a>
	</div>
</div>
