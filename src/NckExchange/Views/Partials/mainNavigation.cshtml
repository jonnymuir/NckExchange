@using Microsoft.AspNetCore.Identity
@using Umbraco.Cms.Core.Security
@using Umbraco.Extensions
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Web.Common.Views
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Models.PublishedContent
@using Microsoft.AspNetCore.Html
@using NckExchange.Extensions

@inject SignInManager<MemberIdentityUser> SignInManager
@inject UserManager<MemberIdentityUser> UserManager

@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
	var siteSettings = Model.GetSiteSettings();
	if (siteSettings == null)
	{
		return;
	}

	bool isAuthenticated = SignInManager.IsSignedIn(User);

	bool isAdmin = false;
	if (isAuthenticated)
	{
		var user = await UserManager.GetUserAsync(User);
		if (user != null)
		{
			isAdmin = await UserManager.IsInRoleAsync(user, "Administrator");
		}
	}
}

<nav class="navbar navbar-expand-lg bg-secondary text-uppercase fixed-top" id="mainNav">
	<div class="container">
		<a class="navbar-brand" href="/#page-top">@siteSettings.SiteName</a>
		<button class="navbar-toggler text-uppercase font-weight-bold bg-primary text-white rounded js-custom-navbar-toggler"
			type="button" aria-controls="navbarResponsive"
			aria-expanded="false" aria-label="Toggle navigation">
			@Umbraco.GetDictionaryValueOrDefault("Menu", "Menu")
			<svg aria-hidden="true" focusable="false" role="img" style="display: inline-block;
				height: 1em;
				overflow: visible;
				vertical-align: -.125em;
				box-sizing: content-box;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
				<path fill="currentColor"
					d="M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z">
				</path>
			</svg>
		</button>
		<div class="navbar-collapse" id="navbarResponsive">
			<ul class="navbar-nav ms-auto">
				@await Html.GetBlockGridHtmlAsync(siteSettings, "mainNavigation") 

                <li class="nav-item dropdown mx-0 mx-lg-1">
                    <a class="nav-link py-3 px-0 px-lg-3 rounded dropdown-toggle js-custom-dropdown-toggle" href="#" id="navbarDropdownAccount"
                        role="button" aria-expanded="false" aria-haspopup="true"
                        aria-label="Account menu">
                        Account
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownAccount">
                        @if (isAuthenticated)
                        {
                            @if (isAdmin)
                            {
                                <li><a class="dropdown-item" href="/admin" aria-label="Go to Admin Messages">Admin Messages</a>
                                </li>
								<li><a class="dropdown-item" href="/umbraco" aria-label="Go to the back office">Admin Backoffice</a>
                                </li>
                            }
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li>
                                <form id="logoutFormDropdown" asp-controller="Account" asp-action="Logout" method="post"
                                    class="dropdown-item p-0">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-link nav-link py-2 px-3 w-100 text-start"
                                        aria-label="Log out of your account">Logout</button>
                                </form>
                            </li>
                        }
                        else
                        {
                            <li><a class="dropdown-item" href="/Account/Login" aria-label="Log in to your account">Login</a>
                            </li>
                        }
                    </ul>
                </li>
			</ul>
		</div>
	</div>
</nav>